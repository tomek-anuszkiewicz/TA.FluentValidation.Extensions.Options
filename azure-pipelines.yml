trigger:
- master
- feature/*
pr:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  disable.coverage.autogenerate: 'true'

steps:

- task: gitversion/setup@0
  displayName: Install GitVersion
  inputs:
    versionSpec: '5.x'

- task: gitversion/execute@0
  displayName: Execute GitVersion
  inputs:
    targetPath: '$(System.DefaultWorkingDirectory)'

- powershell: echo "##vso[task.setvariable variable=nugetPath]$(System.DefaultWorkingDirectory)/src/TA.FluentValidation.Extensions.Options/bin/Release/TA.FluentValidation.Extensions.Options.$(SemVer)"
  displayName: Set $(nugetPath)

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    arguments: >-
      --configuration $(buildConfiguration)
      -p:Version=$(SemVer)
      -p:AssemblyVersion=$(AssemblySemVer)
      -p:FileVersion=$(AssemblySemFileVer)
      -p:Deterministic=true
      -p:ContinuousIntegrationBuild=true
      -warnaserror

- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: 'test'
    publishTestResults: false
    arguments: >-
      --configuration $(buildConfiguration)
      --logger:trx
      --no-build
      -p:CollectCoverage=true
      -p:CoverletOutputFormat=cobertura
      -p:Threshold=100
  continueOnError: true

- task: PublishTestResults@2
  displayName: Publish test results
  inputs:
    testResultsFormat: 'VSTest'
    testResultsFiles: '**/*.trx'
    failTaskOnFailedTests: true

- task: reportgenerator@4
  displayName: Coverage report
  inputs:
    reports: '**/coverage.cobertura.xml'
    targetdir: 'CoverageReport'
    reporttypes: 'HtmlInline_AzurePipelines'
    tag: '$(SemVer)'

- task: PublishCodeCoverageResults@1
  displayName: Publish code coverage results
  inputs:
    failIfCoverageEmpty: true
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '**/coverage.cobertura.xml'
    reportDirectory: 'CoverageReport'

- powershell: >-
    if ((Get-ChildItem -Filter coverage.cobertura.xml -Recurse | Select-String '<coverage line-rate="1" branch-rate="1"' -List).Count -ne 1)
    { Write-Error "Code coverage is not 100%" }
  displayName: Code coverage check

- script: >
    dotnet nuget push
    $(nugetPath).nupkg
    -k $NUGET_API_KEY
    -s https://api.nuget.org/v3/index.json
  displayName: Push nuget
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  env:
    NUGET_API_KEY: $(NugetApiKeyTAFluentValidationExtensionsOptions)

- task: CopyFiles@2
  displayName: Prepare pipeline artifact to publish
  inputs:
    flattenFolders: true
    Contents: |
      **/*.nupkg
      **/*.snupkg
    TargetFolder: 'NugetPipelineArtifacts'

- publish: 'NugetPipelineArtifacts'
  displayName: 'Publish pipeline artifact - nuget'
  artifact: 'Nuget package'
 
- task: GitHubRelease@1
  displayName: Create github release
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:  
    gitHubConnection: 'github.com_tomek-anuszkiewicz'
    title: '$(SemVer)'
    repositoryName: '$(Build.Repository.Name)'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'userSpecifiedTag'
    tag: '$(SemVer)'
    releaseNotesSource: 'inline'
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'
    assets: |-
      $(nugetPath).nupkg
      $(nugetPath).snupkg

- task: GitHubRelease@1
  displayName: Delete github release
  condition: and(failed(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  inputs:
    gitHubConnection: 'github.com_tomek-anuszkiewicz'
    repositoryName: '$(Build.Repository.Name)'
    action: 'delete'
    tag: '$(SemVer)'

- script: > 
    dotnet nuget delete
    TA.FluentValidation.Extensions.Options $(SemVer)
    --non-interactive
    -k $NUGET_API_KEY
    -s https://api.nuget.org/v3/index.json
  displayName: Delete nuget
  condition: and(failed(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  env:
    NUGET_API_KEY: $(NugetApiKeyTAFluentValidationExtensionsOptions)

- script: >
    git push https://tomek-anuszkiewicz:$GITHUB_PAK@github.com/tomek-anuszkiewicz/TA.FluentValidation.Extensions.Options --delete $(SemVer)
  displayName: Delete git tag
  condition: and(failed(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
  env:
    GITHUB_PAK: $(GitHubPakTAFluentValidationExtensionsOptions)
